classDiagram
    GameManager <-- main: Calls
    CanvasManager <-- GameManager: Calls
    ReactorManager <-- GameManager: Calls
    CanvasManager --> Instrument: Stores
    class main {
        +GameManager
    }
    class GameManager {
        +ReactorManager
        +CanvasManager
        +Update(DeltaTime: float)
    }
    GameManager --> EventManager: Calls
    EventManager --> Event: Has
    class EventManager {
        -float elapsedTime
        -Event ActiveEvent
        +Update(DeltaTime: float)
    }
    class Event {
    }
    class CanvasManager {
        +list<Instrument> instruments
        +Initialize()
        +Update(DeltaTime: float)
    }
    class Instrument {
        <<abstract>>
        +constructor(xpos: float, ypox: float, length: float, width: float)
        +bool isbroken
        +Update(DeltaTime: float)
        -Draw()
    }
    Instrument <|-- Display: inherits
    class Display {
        +constructor(type)
        +SetData(data: bool)
        +SetData(data: float, min: float, max: float)
    }
    Instrument <|-- Control: inherits
    class Control {
        +constructor(type)
        +getData(data: bool)
        +getData(data: float)
    }
    class ReactorManager {
        +Reactor: reactor
        +Turbine: turbine
        +Coolant: coolant
        +Update()
    }
    Reactor <-- ReactorManager: Manages
    class Reactor {
        -float temp
        -float ctrl_rod_pos
        -float pressure
        -float heat_output
        -float coolant_flowrate
        +Update(DeltaTime: float)
        -UpdateCtrlRodPos()
        +getPressure()
        +getTemp()
        +getSteamOut()
    }
    Turbine <-- ReactorManager: Manages
    class Turbine {
        -float RPM
        -float Electricity
        +Update(DeltaTime: float)
        -CalculateRPM()
        -CalculatePowerOut()
    }
    ReactorManager --> Coolant: Manages
    Turbine <-- Coolant: Steam
    Reactor --> Coolant: Thermal Energy
    class Coolant {
        -float flowrate
        -float tempIn
        -float tempOut
        -float ThermalTransfer
        +Update(DeltaTime: float)
    }